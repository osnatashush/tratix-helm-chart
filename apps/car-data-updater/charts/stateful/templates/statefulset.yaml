apiVersion: apps/v1
kind: StatefulSet
{{- $fullname := include "car-data-updater-stateful.fullname" . }}
metadata:
  name: {{ include "car-data-updater-stateful.fullname" . }}
  labels:
    {{- include "car-data-updater-stateful.labels" . | nindent 4 }}
    {{- if .Values.appName }}
    app: {{ .Values.appName }}
    {{- end }}
spec:
  serviceName: {{ $fullname }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "car-data-updater-stateful.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "car-data-updater-stateful.selectorLabels" . | nindent 8 }}
        {{- if .Values.appName }}
        app: {{ .Values.appName }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.image.args }}
          args:
            {{- toYaml .Values.image.args | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.image.containerPort }}
              protocol: TCP
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- end }}
          {{- if .Values.env }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- if and .Values.secrets.enabled .Values.secrets.toEnvironments }}
          envFrom:
            {{- range .Values.secrets.toEnvironments }}
            - secretRef:
                name: {{ .name }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}